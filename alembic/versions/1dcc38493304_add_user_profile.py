"""ADD User profile

Revision ID: 1dcc38493304
Revises: b0e282ce6507
Create Date: 2024-10-21 22:33:25.600105

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1dcc38493304'
down_revision: Union[str, None] = 'b0e282ce6507'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diseases',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diseases_id'), 'diseases', ['id'], unique=False)
    op.create_index(op.f('ix_diseases_name'), 'diseases', ['name'], unique=True)
    op.create_table('users_profile',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('social_id', sa.String(), nullable=True),
    sa.Column('dog_name', sa.String(), nullable=True),
    sa.Column('dog_gender', sa.Integer(), nullable=True),
    sa.Column('dog_size', sa.Integer(), nullable=True),
    sa.Column('dog_breed', sa.String(), nullable=True),
    sa.Column('dog_cuteness', sa.Integer(), nullable=True),
    sa.Column('photo_path', sa.String(), nullable=True),
    sa.Column('brith_day', sa.String(), nullable=True),
    sa.Column('current_weight', sa.Integer(), nullable=True),
    sa.Column('past_weight', sa.Integer(), nullable=True),
    sa.Column('health_history', sa.String(), nullable=True),
    sa.Column('vaccinations', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_profile_id'), 'users_profile', ['id'], unique=False)
    op.create_index(op.f('ix_users_profile_social_id'), 'users_profile', ['social_id'], unique=False)
    op.drop_index('ix_posts_id', table_name='posts')
    op.drop_index('ix_posts_user_id', table_name='posts')
    op.drop_table('posts')
    op.drop_index('ix_notifications_id', table_name='notifications')
    op.drop_index('ix_notifications_user_id', table_name='notifications')
    op.drop_table('notifications')
    op.drop_index('ix_likes_id', table_name='likes')
    op.drop_index('ix_likes_post_id', table_name='likes')
    op.drop_index('ix_likes_user_id', table_name='likes')
    op.drop_table('likes')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('likes',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('likes_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_image_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='likes_post_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='likes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_likes_user_id', 'likes', ['user_id'], unique=False)
    op.create_index('ix_likes_post_id', 'likes', ['post_id'], unique=False)
    op.create_index('ix_likes_id', 'likes', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('noti_type', postgresql.ENUM('NOTI_TYPE_MISSION', 'NOTI_TYPE_FEED', name='notitype'), autoincrement=False, nullable=False),
    sa.Column('is_read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('mission_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('like_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['like_id'], ['likes.id'], name='notifications_like_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='notifications_pkey')
    )
    op.create_index('ix_notifications_user_id', 'notifications', ['user_id'], unique=False)
    op.create_index('ix_notifications_id', 'notifications', ['id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('image_urls', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='posts_pkey')
    )
    op.create_index('ix_posts_user_id', 'posts', ['user_id'], unique=False)
    op.create_index('ix_posts_id', 'posts', ['id'], unique=False)
    op.drop_index(op.f('ix_users_profile_social_id'), table_name='users_profile')
    op.drop_index(op.f('ix_users_profile_id'), table_name='users_profile')
    op.drop_table('users_profile')
    op.drop_index(op.f('ix_diseases_name'), table_name='diseases')
    op.drop_index(op.f('ix_diseases_id'), table_name='diseases')
    op.drop_table('diseases')
    # ### end Alembic commands ###

def upgrade() -> None:
    # User profile 테이블 추가
    op.create_table(
        'users_profile',
        sa.Column('id', sa.Integer, primary_key=True, index=True),
        sa.Column('social_id', sa.String, index=True),
        sa.Column('dog_name', sa.String),
        sa.Column('dog_gender', sa.Integer),
        sa.Column('dog_size', sa.Integer),
        sa.Column('dog_breed', sa.String),
        sa.Column('dog_cuteness', sa.Integer),
        sa.Column('photo_path', sa.String),
        sa.Column('brith_day', sa.String),
        sa.Column('current_weight', sa.Integer),
        sa.Column('past_weight', sa.Integer),
        sa.Column('health_history', sa.String),
        sa.Column('vaccinations', sa.String),
    )

    # posts 테이블 삭제 (cascade 옵션 추가)
    # op.drop_table('posts')

def downgrade() -> None:
    # User profile 테이블 삭제
    op.drop_table('users_profile')

    # posts 테이블 복원
    op.create_table(
        'posts',
        sa.Column('id', sa.Integer, primary_key=True, index=True),
        sa.Column('title', sa.String),
        sa.Column('content', sa.String),
        sa.Column('user_id', sa.Integer, sa.ForeignKey('users.id')),
    )
